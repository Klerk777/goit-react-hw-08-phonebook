{"version":3,"file":"static/js/127.75604f28.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.scss?6b75","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.scss?e1a7","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.scss?573d","components/Filter/Filter.jsx","pages/Contacts.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/Button/Button.module.scss?0e05","shared/Button/Button.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/Section/Section.module.scss?4102","shared/Section/Section.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) return contacts;\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__zqkUM\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from 'shared/Button/Button';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport styles from './ContactForm.module.scss';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.some(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (contacts.some(contact => contact.number === number)) {\n      alert('This phone number already exists');\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmitForm}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={onInputChange}\n        />\n      </label>\n\n      <label>\n        Phone number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"enter phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onInputChange}\n        />\n      </label>\n\n      <Button text=\"Add contact\" />\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__lfyFV\",\"name\":\"ContactList_name__r7wZR\",\"number\":\"ContactList_number__NuB-u\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nimport styles from './ContactList.module.scss';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={styles.contactList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <span className={styles.name}>{name}</span>\n          <span className={styles.number}>{number}</span>\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__asygT\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <label className={styles.filter}>\n      Filter\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"add a filter to sort contacts\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport Section from 'shared/Section/Section';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport {\n  selectIsLoading,\n  selectError,\n  selectContacts,\n} from '../redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Section title=\"Add new contact\" level=\"2\">\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\" level=\"2\">\n        {isLoading && !error && <b>Request in progress...</b>}\n        {!isLoading && contacts.length > 0 && <Filter />}\n        {!isLoading && contacts.length === 0 && (\n          <p>There are no contacts yet</p>\n        )}\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formButton\":\"Button_formButton__VvZgm\"};","import PropTypes from 'prop-types';\nimport styles from './Button.module.scss';\n\nconst Button = ({ text }) => {\n  return (\n    <button className={styles.formButton} type=\"submit\">\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__zZBw+\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.scss';\n\nconst Section = ({ title, level = '1', children }) => {\n  const CustomTitle = `h${level}`;\n  return (\n    <section className={styles.section}>\n      <CustomTitle>{title}</CustomTitle>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  level: PropTypes.string,\n};\n\nexport default Section;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","normalizedFilter","toLowerCase","contact","includes","ContactForm","useState","setName","number","setNumber","onInputChange","e","target","useSelector","dispatch","useDispatch","reset","className","styles","onSubmit","preventDefault","normalizedName","some","alert","newContact","addContact","type","placeholder","pattern","title","required","onChange","Button","text","filteredContacts","id","onClick","deleteContact","changeFilter","Contacts","useEffect","fetchContacts","Section","level","children","CustomTitle"],"sourceRoot":""}